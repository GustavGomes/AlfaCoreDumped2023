// <auto-generated />
using System;
using AlfaCoreDumped.Infrastructure.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlfaCoreDumped.DbContext.Migrations
{
    [DbContext(typeof(AlfaDbContext))]
    partial class AlfaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.CompanyResources.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LiberationStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("PdfFile")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Code = "Area1",
                            Description = "Descrição da area 1",
                            LiberationStatus = false,
                            PdfFile = new byte[] { 1 }
                        });
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.CompanyResources.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LiberationStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("PdfFile")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.ExternalCandidate.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("ArmyFile")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("BirthCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BirthCountry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BirthState")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CandidateName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CivilState")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("CnhFile")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("CpfFile")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ethnicity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<bool>("HasFriendFamiliarWorking")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lodged")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nacionality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PantsSize")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pcd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PisPasep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ResidencyNumber")
                        .HasColumnType("int");

                    b.Property<string>("ResidencyType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("ResumeFile")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("RgEmissorCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RgEmissorOrg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RgEmissorState")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("RgFile")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("RgNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RgReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SecondTelephoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShirtSize")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShoeSize")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.ExternalCandidate.Relative", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Kinship")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.ToTable("Relatives");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.ExternalReport.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CostCenter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OperationField")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReporterName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.InternalUser.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cbo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.InternalUser.UserSolicitation.RescissionSolicitation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("RescissionReason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("RescissionSolicitationsIds")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("TargetUserId");

                    b.ToTable("RescissionSolicitations");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.InternalUser.UserSolicitation.VacationSolicitation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("VacationEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("VacationSolicitationsIds")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("VacationStartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("TargetUserId");

                    b.ToTable("VacationSolicitation");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.ValueObject.FileObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("FileObject");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.ValueObject.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.ValueObject.RescissionSolicitationId", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RescissionSolicitationId");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.ValueObject.VacationSolicitationId", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("VacationSolicitationId");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.ExternalCandidate.Relative", b =>
                {
                    b.HasOne("AlfaCoreDumped.Domain.Entities.ExternalCandidate.Candidate", "Candidate")
                        .WithMany("Relatives")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.InternalUser.UserSolicitation.RescissionSolicitation", b =>
                {
                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", null)
                        .WithMany("RescissionSolicitations")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", "TargetUser")
                        .WithMany()
                        .HasForeignKey("TargetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatorUser");

                    b.Navigation("TargetUser");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.InternalUser.UserSolicitation.VacationSolicitation", b =>
                {
                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", null)
                        .WithMany("VacationSolicitations")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", "TargetUser")
                        .WithMany()
                        .HasForeignKey("TargetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatorUser");

                    b.Navigation("TargetUser");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.ValueObject.FileObject", b =>
                {
                    b.HasOne("AlfaCoreDumped.Domain.Entities.ExternalReport.Report", null)
                        .WithMany("Pictures")
                        .HasForeignKey("ReportId");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.ValueObject.Permission", b =>
                {
                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", null)
                        .WithMany("Permissions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.ValueObject.RescissionSolicitationId", b =>
                {
                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", null)
                        .WithMany("RescissionSolicitationsIds")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.ValueObject.VacationSolicitationId", b =>
                {
                    b.HasOne("AlfaCoreDumped.Domain.Entities.InternalUser.User", null)
                        .WithMany("VacationSolicitationsIds")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.ExternalCandidate.Candidate", b =>
                {
                    b.Navigation("Relatives");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.ExternalReport.Report", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("AlfaCoreDumped.Domain.Entities.InternalUser.User", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("RescissionSolicitations");

                    b.Navigation("RescissionSolicitationsIds");

                    b.Navigation("VacationSolicitations");

                    b.Navigation("VacationSolicitationsIds");
                });
#pragma warning restore 612, 618
        }
    }
}
